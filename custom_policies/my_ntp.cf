bundle agent my_ntp {
  vars:
    any::
      "ntp_conf_file" string => "/etc/ntp.conf";
      "infra_server_name" string => "$(my_definitions.infra_server[app01.local.net])";
      "infra_server_ip" slist => getvalues("my_definitions.infra_server");

    cfe_mps::
      "ntp_servers" slist => { "0.in.pool.ntp.org", "0.asia.pool.ntp.org", "0.asia.pool.ntp.org" };
      "restrict" string => "restrict 192.168.56.0 mask 255.255.255.0 nomodify notrap nopeer";

    any.!cfe_mps::
      "ntp_servers" slist => { "$(infra_server_name)" };
      "restrict" string => "";

    any::
      "ntp_packages" slist => { "ntp", "ntpdate" };
      "timezone[ZONE]" string => "Asia/Kolkata";

    centos::
      "service_cmd" string => "/sbin/service";

    freebsd::
      "service_cmd" string => "/usr/sbin/service";

  files:
    any::
      "$(my_definitions.cfe_staging_dir)/ntp_conf.mustache"
        perms => mog("0644", "root", "root"),
        copy_from => local_dcp("$(my_definitions.files_repo_dir)/ntp_conf.mustache"),
        classes => if_repaired("ntp_conf_template_changed");

    any::
      "$(my_definitions.cfe_staging_dir)/ntp.conf.stg"
        create => "true",
        edit_defaults => empty,
        edit_template => "$(my_definitions.cfe_staging_dir)/ntp_conf.mustache",
        template_method => "mustache",
        classes => if_repaired("ntp_conf_template_expanded");

    any::
      "/etc/ntp.conf"
        perms => mog("0644", "root", "root"),
        copy_from => no_backup_dcp("$(my_definitions.cfe_staging_dir)/ntp.conf.stg"),
        classes => if_repaired("ntp_conf_changed");

    any::
      "/etc/sysconfig/clock"
        perms => mog("0644", "root", "root"),
        create => "true",
        edit_line => set_quoted_values("timezone");

    any::
      "/etc/localtime"
        link_from => ln_s("/usr/share/zoneinfo/Asia/Kolkata"),
        move_obstructions => "true";

  packages:
    centos::
      "$(ntp_packages)"
        package_method => generic,
        package_policy => "add";

  processes:
    any::
      "ntpd" restart_class => "restart_ntpd";

  services:
    centos::
      "ntpd"
        service_policy => "start",
        classes => if_repaired("ntpd_restarted");

  commands:
    any.(restart_ntpd|ntp_conf_changed)::
      "$(service_cmd) ntpd restart" classes => if_repaired("ntpd_restarted");

  reports:
    ntpd_restarted::
      "cf3: ntpd has been restarted";
}
