bundle agent my_user {
  vars:
    any::
      "users" slist => { "unixguy" };
### start unixguy ###
    linux::
      "password[unixguy]"
        string =>
          "$6$zK3Swac98Lf4IoJ6$xns.AVKkePFqeJ.5F/mDMvwC1va56GLIC66pUy3Klcv5iJEKut3zYdd9ZwPux8QC6nGPBu93W.mlqXTOpXPoK0";
    freebsd::
      "password[unixguy]"
        string =>
          "$6$CUubOkVF5q2s.eOd$ZhfXZrK8nGtehCJNuqES5Omv.mN.o6Iy7kLvwFeCcq3WYguztyeW4PhSBhVSOSVOSgV.lV2GFH.9q557oaYfx0";

    any::
      "sshkey[unixguy]"
        string =>
          "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA4lYLcZ+6j0r9kvj/rdkrVzhR3b/poPQ4iyFKU2vi2qfIAFpRV/hdo+rPD4+pElhB1ONXZupWMbL0p3U/6yCfrxvQNeLKs7kPxjdDhiKLKua6MFpLdTQHzq+P6YuCWQKsazR4mLEx532NuwFSaplF/vT1nK4jgkK/JC7Tvq9FmDeOxEKhoiw0KFHgbg0U6nu9a7MbpMR/iw43kmWYLNkbmeTE69cOsUQcldGgSsAx6D9jZRHFbx6zG5PJXGlqQ445PDEOlVfcfclQY84LCeK+nl1b2LAC9lVv59aegJQ4PIOtL1chfOUgYe1Wd2gmPtdtSjupYnGlfVC0HuglHEM7yQ== unixguy@app01.local.net";

    linux::
      "uid[unixguy]" string => "10000";
      #"gid[unixguy]" string => "10000";

    freebsd::
      "pwline[unixguy]"
        string => "unixguy:$(password[unixguy]):10000:10000::0:0:User &:/home/unixguy:/bin/bash";


### end unixguy ###
    any::
      "privileged_users" slist => { "unixguy" };

    linux|freebsd::
      "homedir"
        string => "/home/",
        policy => "free";

    solaris::
      "homedir"
        string => "/export/home/",
        policy => "free";

    centos|solaris::
      "sudoers_dir" string => "/etc/sudoers.d";

    freebsd::
      "sudoers_dir" string => "/usr/local/etc/sudoers.d";

    any::
      # /etc/skel files that probably we care for
      "skel_files" slist => { ".bash_logout", ".bash_profile", ".bashrc" };

  users:
    # sadly users promise is not supported on FreeBSD
    any.!freebsd::
      "$(users)"
        policy => "present",
        home_dir => "$(homedir)$(users)",
        password => hashed_password("$(password[$(users)])"),
        shell => "/bin/bash",
        uid => "$(uid[$(users)])",
        classes => if_repaired("$(users)_created");

  files:
    any::
      "/home/$(users)/."
        create => "true",
        perms => mog("0750", "$(users)", "$(users)");

    freebsd.generic_host::
      "/etc/master.passwd"
        perms => mog("0600", "root", "wheel"),
        edit_line => append_if_no_line("$(pwline[$(users)])"),
        classes => if_repaired("$(users)_created");

    any::
      "$(sudoers_dir)/$(privileged_users)"
        perms => mog("0440", "root", "root"),
        create => "true",
        edit_defaults => empty,
        edit_line => insert_user("$(privileged_users)"),
        classes => if_repaired("$(privileged_users)_sudoers_repaired");

    any::
      "/etc/skel/.bashrc"
        perms => mog("0744", "root", "root"),
        copy_from => no_backup_dcp("$(my_definitions.files_repo_dir)/bashrc");

    any::
      "$(homedir)$(users)/$(skel_files)"
        perms => mog("0740", "$(users)", "$(users)"),
        copy_from => no_backup_dcp("/etc/skel/$(skel_files)");

    any::
      "$(homedir)$(users)/.ssh/."
        create => "true",
        perms => mog("0700", "$(users)", "$(users)");

    any::
      "$(homedir)$(users)/.ssh/authorized_keys"
        create => "true",
        perms => mog("0600", "$(users)", "$(users)"),
        edit_line => append_if_no_line("$(sshkey[$(users)])");

    any::
      "/etc/dir_colors"
        perms => mog("0644", "root", "root"),
        copy_from => no_backup_dcp("$(my_definitions.files_repo_dir)/my_user/dir_colors");

  commands:
    freebsd.generic_host::
      "/usr/sbin/pw user add $(users)" classes => if_repaired("$(users)_created_step1");

    freebsd.generic_host::
      "/usr/bin/chsh -s /bin/bash $(users)" classes => if_repaired("$(users)_created_step2");

  reports:
    generic_host::
      "cf3: $(users) is created" ifvarclass => "$(users)_created_step1";

    generic_host::
      "cf3: /etc/sudoers.d/$(privileged_users) sudoers installed"
        ifvarclass => "$(privileged_users)_sudoers_repaired";
}

bundle edit_line insert_user(user) {
  insert_lines:
      "$(user)    ALL=(ALL) ALL";
}
